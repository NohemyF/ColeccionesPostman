{
	"info": {
		"_postman_id": "85c94f64-6b96-42c3-8d21-641904144dd7",
		"name": "emaker-api-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "access",
			"item": [
				{
					"name": "SUCCESS apiHost/auth/session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data1 = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\",data1.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//la respuesta debe ser válida y tener un cuerpo",
									"pm.test(\"response must be valid and have a body\", function () {",
									"     pm.response.to.be.ok;",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json;",
									"});",
									"",
									"//verificar que haya un encabezado de respuesta",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Check the response is JSON\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.not.be.error; ",
									"});",
									"",
									"pm.test(\"Value token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token.length).to.be.eq(203);",
									"});",
									"",
									"//para comprobar si el cuerpo de cadena tiene una respuesta",
									"pm.test(\"Body contains string\",() => {",
									"  pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"",
									"//comprobar el entorno activo (seleccionado actualmente) en Postman",
									"pm.test(\"Check the active environment\", () => {",
									"  pm.expect(pm.environment.name).to.eql(\"Env - QA API Testing\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"resource\", \"login\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apiKey\": \"{{apiKeyVar}}\",\r\n    \"secretKey\": \"{{secretKeyVar}}\",\r\n    \"userName\": \"{{userSuccessVar}}\",\r\n    \"password\": \"{{pwdSuccessVar}}\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiHost}}/auth/session",
							"host": [
								"{{apiHost}}"
							],
							"path": [
								"auth",
								"session"
							]
						},
						"description": "## Descripción\r\nEsta API es para que al iniciar sesión con un usuario se genere un token el cuál me permitirá tener acceso a las demás APIS.\r\nPara iniciar sesión necesitaremos estos campos que una vez ingresados ​​serán validados por la API para otorgar acceso.\r\n\r\n## Requisitos en Body\r\nPara crear un registro de inicio de sesión necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| apiKey (Not Null) | String |\r\n| secretKey (Not Null) | String |\r\n| userName (Not Null) | String |\r\n| password (Not Null) | String |\r\n\r\n## Código de error:\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_API_KEY_01\r\nEsta respuesta significa que al validar Apikey o SecretKey en la base de datos no se obtuvo porque no existe como tal.\r\n\r\n### - EMAKER_USER_02\r\nEsta respuesta significa que el usuario ingresado UserName no está registrado, no existe en la empresa o el password es incorrecto.\r\n\r\n## Respuesta del método\r\nTe regresa cómo respuesta el token el cuál debe de colocarse en las variables de entorno para poder obtener la autorización a las demás APIS."
					},
					"response": [
						{
							"name": "ApiKey does not exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"incorrect\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 00:06:30 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-11T19:06:30.952922\",\n    \"message\": \"ApiKey does not exists\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_API_KEY_01\",\n    \"details\": null\n}"
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"diegochg\",\r\n    \"password\": \"diegochg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "text/plain;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "178"
								},
								{
									"key": "Date",
									"value": "Fri, 05 Mar 2021 21:57:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkaWVnb2NoZyIsImV4cCI6MTYxNTAxNzQ2MSwiaWF0IjoxNjE0OTgxNDYxfQ.rfKtnO210TEw_9Y-YbXay2NVDGqsWcvFkwUBTtmU5ij8x8o-BDlkNeyYDX8JHs7kFXidZ9-Amsw9WPS-vHrtfQ"
						},
						{
							"name": "Field password Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"diegochg\",\r\n    \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:26:29 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:26:29.969894\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"password: password value is empty and the API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "Field secretKey Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": null,\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:24:32 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:24:32.599432\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"secretKey: secretKey value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "Field apiKey Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": null,\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:23:05 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:23:05.262079\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"apiKey: apiKey value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "Field userName Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:24:59 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:24:59.45303\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"userName: userName value is empty and the API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "FIeld userName Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": null,\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:25:46 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:25:46.839836\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"userName: userName value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "User does not exists in company",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"incorrect\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 00:07:17 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-11T19:07:17.563545\",\n    \"message\": \"User does not exists in company\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_USER_02\",\n    \"details\": null\n}"
						},
						{
							"name": "FIeld secretKey Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:24:11 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:24:11.458792\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"secretKey: secretKey value is empty and the API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "FIeld password Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"diegochg\",\r\n    \"password\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:26:50 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:26:50.266911\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"password: password value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "Field apiKey Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:22:39 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:22:39.577534\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"apiKey: apiKey value is empty and the API cannot be processed\"\n    ]\n}"
						}
					]
				},
				{
					"name": "ERROR apiHost/auth/session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"message error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eq(\"ApiKey does not exists\");",
									"});",
									"",
									"pm.test(\"Test Body incorrect\",function(){",
									"    let requestBody = JSON.parse(pm.request.body.raw);",
									"    pm.expect(requestBody.apiKey).to.be.eql(\"123\");",
									"    pm.expect(requestBody.secretKey).to.be.eql(\"123\");",
									"    pm.expect(requestBody.userName).to.be.eql(\"ame\");",
									"    pm.expect(requestBody.password).to.be.eql(\"ame\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"resource\", \"login\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apiKey\": \"{{apiKeyVarIncorrect}}\",\r\n    \"secretKey\": \"{{secretKeyVarIncorrect}}\",\r\n    \"userName\": \"{{userErrorVar}}\",\r\n    \"password\": \"{{pwdErrorVar}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiHost}}/auth/session",
							"host": [
								"{{apiHost}}"
							],
							"path": [
								"auth",
								"session"
							]
						},
						"description": "## Descripción\r\nEsta API es para que al iniciar sesión con un usuario se genere un token el cuál me permitirá tener acceso a las demás APIS.\r\nPara iniciar sesión necesitaremos estos campos que una vez ingresados ​​serán validados por la API para otorgar acceso.\r\n\r\n## Requisitos en Body\r\nPara crear un registro de inicio de sesión necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| apiKey (Not Null) | String |\r\n| secretKey (Not Null) | String |\r\n| userName (Not Null) | String |\r\n| password (Not Null) | String |\r\n\r\n## Código de error:\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_API_KEY_01\r\nEsta respuesta significa que al validar Apikey o SecretKey en la base de datos no se obtuvo porque no existe como tal.\r\n\r\n### - EMAKER_USER_02\r\nEsta respuesta significa que el usuario ingresado UserName no está registrado, no existe en la empresa o el password es incorrecto.\r\n\r\n## Respuesta del método\r\nTe regresa cómo respuesta el token el cuál debe de colocarse en las variables de entorno para poder obtener la autorización a las demás APIS."
					},
					"response": [
						{
							"name": "FIeld userName Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": null,\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:25:46 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:25:46.839836\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"userName: userName value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "FIeld password Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"diegochg\",\r\n    \"password\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:26:50 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:26:50.266911\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"password: password value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "FIeld secretKey Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:24:11 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:24:11.458792\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"secretKey: secretKey value is empty and the API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "Field apiKey Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:22:39 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:22:39.577534\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"apiKey: apiKey value is empty and the API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "Field userName Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:24:59 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:24:59.45303\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"userName: userName value is empty and the API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "User does not exists in company",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"incorrect\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 00:07:17 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-11T19:07:17.563545\",\n    \"message\": \"User does not exists in company\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_USER_02\",\n    \"details\": null\n}"
						},
						{
							"name": "Field secretKey Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": null,\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:24:32 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:24:32.599432\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"secretKey: secretKey value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"diegochg\",\r\n    \"password\": \"diegochg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "text/plain;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "178"
								},
								{
									"key": "Date",
									"value": "Fri, 05 Mar 2021 21:57:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkaWVnb2NoZyIsImV4cCI6MTYxNTAxNzQ2MSwiaWF0IjoxNjE0OTgxNDYxfQ.rfKtnO210TEw_9Y-YbXay2NVDGqsWcvFkwUBTtmU5ij8x8o-BDlkNeyYDX8JHs7kFXidZ9-Amsw9WPS-vHrtfQ"
						},
						{
							"name": "Field apiKey Null",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": null,\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:23:05 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:23:05.262079\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"apiKey: apiKey value is null and API cannot be processed\"\n    ]\n}"
						},
						{
							"name": "ApiKey does not exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"incorrect\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 00:06:30 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-11T19:06:30.952922\",\n    \"message\": \"ApiKey does not exists\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_API_KEY_01\",\n    \"details\": null\n}"
						},
						{
							"name": "Field password Empty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiKey\": \"123456789\",\r\n    \"secretKey\": \"123456789\",\r\n    \"userName\": \"diegochg\",\r\n    \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/v1/emaker/auth/session",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"emaker",
										"auth",
										"session"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 12 Mar 2021 14:26:29 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2021-03-12T09:26:29.969894\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/auth/session\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"password: password value is empty and the API cannot be processed\"\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "scheduler",
			"item": [
				{
					"name": "apikey",
					"item": []
				},
				{
					"name": "company",
					"item": [
						{
							"name": "1-ACCES apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test shortName Company for above (encima) of 0\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.shortName.length).to.be.above(0);  ",
											"});",
											"",
											"pm.test(\"Test that the body raw has element string\", function () {",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.shortName).to.be.a(\"string\");",
											"    pm.expect(requestBody.logo).to.be.a(\"string\");  ",
											"    pm.expect(requestBody.website).to.be.a(\"string\");",
											"    pm.expect(requestBody.address).to.be.a(\"string\");",
											"    pm.expect(requestBody.secondaryAddress).to.be.a(\"string\");",
											"    pm.expect(requestBody.shortName).to.be.a(\"string\");",
											"});",
											"",
											"pm.test(\"Value message SUCCES\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"The company was created successfully\");",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomFullName}}');",
											"pm.variables.replaceIn('{{$randomCompanyName}}');",
											"",
											"var jsonData1 = JSON.parse(responseBody);",
											"pm.environment.set(\"varCompanyCode\",jsonData1.companyCode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"Compañía de origen Piura\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"{{$randomFullName}} {{$randomCompanyName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "2-ACCES apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test shortName and secondaryAddress\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.shortName.length).to.be.above(0);",
											"    pm.expect(requestBody.secondaryAddress.length).to.be.eql(0);  ",
											"});",
											"",
											"pm.test(\"Test that the body raw has element string\", function () {",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.shortName).to.be.a(\"string\");",
											"    pm.expect(requestBody.logo).to.be.a(\"string\");  ",
											"    pm.expect(requestBody.website).to.be.a(\"string\");",
											"    pm.expect(requestBody.address).to.be.a(\"string\");",
											"    pm.expect(requestBody.secondaryAddress).to.be.a(\"string\");",
											"    pm.expect(requestBody.shortName).to.be.a(\"string\");",
											"});",
											"",
											"pm.test(\"Value message SUCCES\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"The company was created successfully\");",
											"});",
											"",
											"//pm.variables.replaceIn('{{$randomFullName}}');",
											"",
											"var jsonData1 = JSON.parse(responseBody);",
											"pm.environment.set(\"varTestCompanyCd\",jsonData1.companyCode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"Compañía de origen Piura\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"\",\r\n    \"shortName\": \"AMERICA\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "1-ERROR apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that comprobation shortName has a name \",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.description.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"//--- Aqui se crea la variable company que no existe",
											"var jsonData1 = JSON.parse(responseBody);",
											"var variableError = pm.environment.get(\"varCompanyCode\");",
											"pm.environment.set(\"varCompanyNotExist\",variableError+56789);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "2-ERROR apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that comprobation shortName has a name \",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.logo.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"test12\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "3-ERROR apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that comprobation shortName has a name \",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.website.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"test12\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "4-ERROR apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that comprobation shortName has a name \",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.address.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"test12\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "5-ERROR apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"pm.variables.get(\"variable_key\");",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that comprobation shortName has a name \",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.shortName.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"test12\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "6-ERROR apiHost/company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"pm.variables.get(\"variable_key\");",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that comprobation shortName has a name \",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.secondaryAddress.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Company shortName exists\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"test12\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"\",\r\n    \"shortName\": \"AMERICA\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company"
									]
								},
								"description": "## Descripción\r\nEsta API registra y guarda la información de una compañía en la base de datos.\r\nPara que ésta y las demás API funcionen correctamente, necesitan el token en Autorización -> Bearer Token\r\n\r\n## Requisitos en Body\r\nPara crear una compañía necesitamos enviar la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| descripción (Not null) | String |\r\n| logo (Not null) | String |\r\n| sitio web (Not null) | String |\r\n| dirección (Not null) | String |\r\n| secundariaAddress (Null) | String |\r\n| shortName (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_01\r\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\r\n\r\n### - EMAKER_COMPANY_02\r\nEsta respuesta significa que la compañía que se quiere crear ya existe, por lo que la solución sería cambiar los datos de los campos, de forma indispensable el shortName.\r\n\r\n## Respuesta del método\r\nSi se ha creado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Company was created\"."
							},
							"response": [
								{
									"name": "Field shortName Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:56.016306\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld logo Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:02 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:02.864973\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test2\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:35:57 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:35:56.960+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company\"\n}"
								},
								{
									"name": "FIeld address Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": null,\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:42:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:42:27.777052\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field logo Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": null,\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:28.774094\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"logo: logo value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company shortName exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"repeated\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:47:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:47:23.260541\",\n    \"message\": \"Company shortName exists\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_COMPANY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Field website Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:40:56 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:40:56.68393\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld website Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": null,\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:23.648666\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"website: website value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld address Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:41:55 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:41:55.865648\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"address: address value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld shortName Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"test\",\r\n    \"logo\": \"test\",\r\n    \"website\": \"test\",\r\n    \"address\": \"test\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:43:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:43:12.396419\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"shortName: shortName value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field description Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\",\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:11 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:11.437652\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld description Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": null,\r\n    \"logo\": \"test2\",\r\n    \"website\": \"test2\",\r\n    \"address\": \"test2\",\r\n    \"secondaryAddress\": \"test2\",\r\n    \"shortName\": \"my company 2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:39:37 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:39:37.961593\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/company\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"description: description value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "1-ACCES apiHost/company/{{companyCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Test response Body\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.be.a(\"number\");",
											"    pm.expect(jsonData.createDate).to.be.a(\"number\");",
											"    pm.expect(jsonData.updateDate).to.be.a(\"number\");",
											"    pm.expect(jsonData.description).to.be.a(\"string\");",
											"    pm.expect(jsonData.logo).to.be.a(\"string\");",
											"    pm.expect(jsonData.website).to.be.a(\"string\");",
											"    pm.expect(jsonData.address).to.be.a(\"string\");",
											"    pm.expect(jsonData.secondaryAddress).to.be.a(\"string\");",
											"    pm.expect(jsonData.shortName).to.be.a(\"string\");",
											"    pm.expect(jsonData.companyCode).to.be.a(\"string\");",
											"",
											"});",
											"",
											"//prueba que el CompanyCod que se creó sea igual al que se está consultando en este GET",
											"pm.test(\"Test that the codcompany that was created is the same as the one being queried\",() => {",
											"    var jsonData = JSON.parse(responseBody);",
											"    var ComṕanyCode = pm.variables.get(\"varCompanyCode\")",
											"    var RespCodCompany = jsonData.companyCode",
											"    pm.expect(ComṕanyCode).to.equal(RespCodCompany);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varCompanyCode}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varCompanyCode}}"
									]
								},
								"description": "## Descripción\r\nEsta API devuelve la información de una compañía en función de su código.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API.\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y consultar toda información referente a una compañía necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API. En este proyecto no se generará ese error, puesto que esta API no requiere permisos.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo, porque no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtengo la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| description (Not null) | string |\r\n| logo | string |\r\n| website (Not null) | string |\r\n| address (Not null) | string |\r\n| secondaryAddress (Not null) | string |\r\n| shortName (Not null) | string |\r\n| companyCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"532d8979-1205-40ba-a773-c1c8c619163f"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:30:28 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"description\": \"test1\",\n    \"logo\": \"test1\",\n    \"website\": \"test1\",\n    \"address\": \"test1\",\n    \"secondaryAddress\": \"test1\",\n    \"shortName\": \"my company 1\",\n    \"createDate\": \"2021-02-17T06:38:15.002+00:00\",\n    \"updateDate\": \"2021-02-17T06:38:15.002+00:00\",\n    \"companyCode\": \"532d8979-1205-40ba-a773-c1c8c619163f\"\n}"
								},
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/codeCompanyIncorrect",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"codeCompanyIncorrect"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:29:45 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:29:45.668208\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/company/codeCompanyIncorrect\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"532d8979-1205-40ba-a773-c1c8c619163f"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:28:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:28:42.556+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f\"\n}"
								}
							]
						},
						{
							"name": "2-ACCES apiHost/company/{{companyCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Test response Body\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.be.a(\"number\");",
											"    pm.expect(jsonData.createDate).to.be.a(\"number\");",
											"    pm.expect(jsonData.updateDate).to.be.a(\"number\");",
											"    pm.expect(jsonData.description).to.be.a(\"string\");",
											"    pm.expect(jsonData.logo).to.be.a(\"string\");",
											"    pm.expect(jsonData.website).to.be.a(\"string\");",
											"    pm.expect(jsonData.address).to.be.a(\"string\");",
											"    pm.expect(jsonData.secondaryAddress).to.be.a(\"string\");",
											"    pm.expect(jsonData.shortName).to.be.a(\"string\");",
											"    pm.expect(jsonData.companyCode).to.be.a(\"string\");",
											"",
											"});",
											"",
											"//prueba que el CompanyCod que se creó sea igual al que se está consultando en este GET",
											"pm.test(\"Test that the codcompany that was created is the same as the one being queried\",() => {",
											"    var jsonData = JSON.parse(responseBody);",
											"    var ComṕanyCode = pm.variables.get(\"varTestCompanyCd\")",
											"    var RespCodCompany = jsonData.companyCode",
											"    pm.expect(ComṕanyCode).to.equal(RespCodCompany);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								},
								"description": "## Descripción\r\nEsta API devuelve la información de una compañía en función de su código.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API.\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y consultar toda información referente a una compañía necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API. En este proyecto no se generará ese error, puesto que esta API no requiere permisos.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo, porque no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtengo la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| description (Not null) | string |\r\n| logo | string |\r\n| website (Not null) | string |\r\n| address (Not null) | string |\r\n| secondaryAddress (Not null) | string |\r\n| shortName (Not null) | string |\r\n| companyCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"532d8979-1205-40ba-a773-c1c8c619163f"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:30:28 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"description\": \"test1\",\n    \"logo\": \"test1\",\n    \"website\": \"test1\",\n    \"address\": \"test1\",\n    \"secondaryAddress\": \"test1\",\n    \"shortName\": \"my company 1\",\n    \"createDate\": \"2021-02-17T06:38:15.002+00:00\",\n    \"updateDate\": \"2021-02-17T06:38:15.002+00:00\",\n    \"companyCode\": \"532d8979-1205-40ba-a773-c1c8c619163f\"\n}"
								},
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/codeCompanyIncorrect",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"codeCompanyIncorrect"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:29:45 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:29:45.668208\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/company/codeCompanyIncorrect\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"532d8979-1205-40ba-a773-c1c8c619163f"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:28:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:28:42.556+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f\"\n}"
								}
							]
						},
						{
							"name": "ERROR apiHost/company/{{companyCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"+pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"file creation incorrect\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Company does not exists\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varCompanyNotExist}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varCompanyNotExist}}"
									]
								},
								"description": "## Descripción\r\nEsta API devuelve la información de una compañía en función de su código.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API.\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y consultar toda información referente a una compañía necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API. En este proyecto no se generará ese error, puesto que esta API no requiere permisos.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo, porque no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtengo la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| description (Not null) | string |\r\n| logo | string |\r\n| website (Not null) | string |\r\n| address (Not null) | string |\r\n| secondaryAddress (Not null) | string |\r\n| shortName (Not null) | string |\r\n| companyCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/codeCompanyIncorrect",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"codeCompanyIncorrect"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:29:45 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T12:29:45.668208\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/company/codeCompanyIncorrect\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"532d8979-1205-40ba-a773-c1c8c619163f"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:28:42 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T17:28:42.556+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f\"\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/company/532d8979-1205-40ba-a773-c1c8c619163f",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"company",
												"532d8979-1205-40ba-a773-c1c8c619163f"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 17:30:28 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"description\": \"test1\",\n    \"logo\": \"test1\",\n    \"website\": \"test1\",\n    \"address\": \"test1\",\n    \"secondaryAddress\": \"test1\",\n    \"shortName\": \"my company 1\",\n    \"createDate\": \"2021-02-17T06:38:15.002+00:00\",\n    \"updateDate\": \"2021-02-17T06:38:15.002+00:00\",\n    \"companyCode\": \"532d8979-1205-40ba-a773-c1c8c619163f\"\n}"
								}
							]
						},
						{
							"name": "1-ACCES apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Modificó la description de la compañía",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"//Ha habido una actualización en un solo campo diferente a shortName",
											"",
											"pm.test(\"Test that the body raw has element string\", function () {",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.description).to.be.a(\"string\");",
											"    pm.expect(requestBody.logo).to.be.a(\"string\");  ",
											"    pm.expect(requestBody.website).to.be.a(\"string\");",
											"    pm.expect(requestBody.address).to.be.a(\"string\");",
											"    pm.expect(requestBody.secondaryAddress).to.be.a(\"string\");",
											"    pm.expect(requestBody.shortName).to.be.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"ES DE PIURA\",\n    \"logo\": \"test\",\n    \"website\": \"test\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"\",\n    \"shortName\": \"AMERICA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2-ACCES apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Modificó el nombre de la compañía",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"file updated successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"The company was updated successfully\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.shortName).to.be.a(\"string\");  ",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.shortName.length).to.be.above(0);",
											"pm.expect(requestBody.secondaryAddress.length).to.be.above(0);",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Compañía de origen Piura\",\n    \"logo\": \"test\",\n    \"website\": \"test\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"test\",\n    \"shortName\": \"{{$randomLastName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3-ACCES apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Modificó la dirección de la compañía y la dejó vacío",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"file updated successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"The company was updated successfully\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.shortName).to.be.a(\"string\");  ",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.secondaryAddress.length).to.be.eqls(0);",
											"pm.expect(requestBody.shortName.length).to.be.above(0);",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomFullName}}');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Compañía de origen Piura\",\n    \"logo\": \"test\",\n    \"website\": \"test\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"\",\n    \"shortName\": \"{{$randomFullName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1-ERROR apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Debo especificar el nombre de la compañia que quiero actualizar",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//Cuando en el BODY el valor de \"SHORTNAME\" a actualizar está vacío",
											"pm.test(\"Validation failed directoryCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.shortName.length).to.be.eql(0);",
											"});",
											"",
											"//Los companyCode y directoryCode están escritos correctamente, osea, existen"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Compañía de origen Piura\",\n    \"logo\": \"test\",\n    \"website\": \"test\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"\",\n    \"shortName\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2-ERROR apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//Cuando en el companyCode not exists",
											"pm.test(\"Validation failed directoryCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Company does not exists\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Compañía de origen Piura\",\n    \"logo\": \"test\",\n    \"website\": \"test\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"\",\n    \"shortName\": \"{{$randomFullName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varCompanyNotExist}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varCompanyNotExist}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3-ERROR apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Validation failed directoryCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.description.length).to.be.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"\",\n    \"logo\": \"test\",\n    \"website\": \"test\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"Piura\",\n    \"shortName\": \"AMERICA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4-ERROR apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Validation failed directoryCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.logo.length).to.be.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Compañía de origen Piura\",\n    \"logo\": \"\",\n    \"website\": \"test\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"Piura\",\n    \"shortName\": \"AMERICA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5-ERROR apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Validation failed directoryCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.website.length).to.be.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Compañía de origen Piura\",\n    \"logo\": \"test\",\n    \"website\": \"\",\n    \"address\": \"test\",\n    \"secondaryAddress\": \"Piura\",\n    \"shortName\": \"AMERICA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6-ERROR apiHost/company/{{companyCode}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Validation failed directoryCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.address.length).to.be.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Compañía de origen Piura\",\n    \"logo\": \"test\",\n    \"website\": \"test\",\n    \"address\": \"\",\n    \"secondaryAddress\": \"Piura\",\n    \"shortName\": \"AMERICA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ACCES apiHost/company/{{companyCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"file deleted successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"The Company was deleted successfully\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.a(\"string\");  ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiHost}}/company/{{varTestCompanyCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varTestCompanyCd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ERROR apiHost/company/{{companyCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"file deleted successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Company does not exists\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.a(\"string\");  ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiHost}}/company/{{varCompanyNotExist}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"company",
										"{{varCompanyNotExist}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "directory",
					"item": [
						{
							"name": "1-SUCCESS apiHost/{{companyCode}}/directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201]);",
											"});",
											"",
											"pm.test(\"file creation successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory was created\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.name).to.be.a(\"string\");  ",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.above(0);",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"",
											"var jsonData1 = JSON.parse(responseBody);",
											"pm.environment.set(\"varDirectoryCd\",jsonData1.directoryCode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomFirstName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\""
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:04:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was created\"\n}"
								},
								{
									"name": "Company Validation Exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:50 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:50.71442\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:01:19 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:01:18.3653374\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:05:35 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:05:35.3902534\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:14.0191586\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "2-SUCCESS apiHost/{{companyCode}}/directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([201]);",
											"});",
											"",
											"pm.test(\"file creation successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory was created\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.name).to.be.a(\"string\");  ",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.above(0);",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"",
											"var jsonData1 = JSON.parse(responseBody);",
											"pm.environment.set(\"varTestDirectoryCd\",jsonData1.directoryCode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Company of Test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\""
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:04:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was created\"\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:05:35 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:05:35.3902534\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:01:19 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:01:18.3653374\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company Validation Exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:50 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:50.71442\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:14.0191586\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "1-ERROR apiHost/{{companyCode}}/directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([400,401]);",
											"});",
											"",
											"pm.test(\"Response in an object, not an array\", function () { ",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"message error company URI\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Company does not exists\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.above(0);",
											"});",
											"",
											"//--- Aqui se crea la variable directory que no existe",
											"var jsonData1 = JSON.parse(responseBody);",
											"var variableErrorDirectory = pm.environment.get(\"varDirectoryCd\");",
											"pm.environment.set(\"varDirectoryNotExist\",variableErrorDirectory+12345);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"directoryTest 10\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/directory",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"directory"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\""
							},
							"response": [
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:01:19 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:01:18.3653374\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company Validation Exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:50 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:50.71442\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:04:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was created\"\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:05:35 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:05:35.3902534\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:14.0191586\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "2-ERROR apiHost/{{companyCode}}/directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Error porque se quiere crear un directorio que ya existe",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"message error directory registered\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory is already registered\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Company of Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\""
							},
							"response": [
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:14.0191586\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:04:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was created\"\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:05:35 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:05:35.3902534\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Company Validation Exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:50 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:50.71442\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:01:19 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:01:18.3653374\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "3-ERROR apiHost/{{companyCode}}/directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Cuando se quiere crear un directorio pero el Name para crearlo está vacío",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"message error directory registered\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\""
							},
							"response": [
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:01:19 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:01:18.3653374\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:14.0191586\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:04:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was created\"\n}"
								},
								{
									"name": "Company Validation Exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e8f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:02:50 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:02:50.71442\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/e8f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:05:35 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:05:35.3902534\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								}
							]
						},
						{
							"name": "SUCCESS apiHost/{{companyCode}}/directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response in an array\", function () { ",
											"var jsonData1 = pm.response.json();",
											"pm.expect(jsonData1).to.be.an(\"array\");",
											"});",
											"",
											"pm.test(\"Test that the array has even one more digit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"});",
											"",
											"// Prueba que cada atributo del objeto exista - Response Body string",
											"pm.test(\"Test that each attribute of the object exists\",() => {",
											"  pm.expect(pm.response.text()).to.include(\"id\");",
											"  pm.expect(pm.response.text()).to.include(\"createDate\");",
											"  pm.expect(pm.response.text()).to.include(\"updateDate\");",
											"  pm.expect(pm.response.text()).to.include(\"name\");",
											"  pm.expect(pm.response.text()).to.include(\"companyCode\");",
											"  pm.expect(pm.response.text()).to.include(\"directoryCode\");",
											"});",
											"",
											"let varcodigodirect = pm.variables.get(\"varDirectoryCd\");",
											"tests[\"directoryCode exists\"] = responseBody.has(varcodigodirect);",
											"",
											"let varcodigodirectFirst = pm.variables.get(\"varTestDirectoryCd\");",
											"tests[\"varTestdirectoryCode exists\"] = responseBody.has(varcodigodirectFirst);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory"
									]
								},
								"description": "## Descripción\r\nEsta API retorna la información del directorio en función del código de la compañia a la que pertenecen.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y obtener los directorios necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtenemos todos los directorios que pertenecen al companyCod de la cuál están consultando. La estructura de la información es la siguiente:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| name (Not null) | string |\r\n| companyCode (Not null) | string |\r\n| directoryCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:10:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"directory 1\",\n        \"createDate\": \"2021-02-08T11:04:19.626+00:00\",\n        \"updateDate\": \"2021-02-08T11:04:19.627+00:00\",\n        \"companyCode\": \"e7f64862-0efb-4809-93f6-ddb03e64d025\",\n        \"directoryCode\": \"04dc060b-aa94-43e3-bdf6-57f3a201edd0\"\n    }\n]"
								}
							]
						},
						{
							"name": "ERROR apiHost/{{companyCode}}/directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"message error\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"Company does not exists\");",
											"});",
											"",
											"pm.test(\"Status code is 400 and 401\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/directory",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"directory"
									]
								},
								"description": "## Descripción\r\nEsta API retorna la información del directorio en función del código de la compañia a la que pertenecen.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y obtener los directorios necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtenemos todos los directorios que pertenecen al companyCod de la cuál están consultando. La estructura de la información es la siguiente:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| name (Not null) | string |\r\n| companyCode (Not null) | string |\r\n| directoryCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:10:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"directory 1\",\n        \"createDate\": \"2021-02-08T11:04:19.626+00:00\",\n        \"updateDate\": \"2021-02-08T11:04:19.627+00:00\",\n        \"companyCode\": \"e7f64862-0efb-4809-93f6-ddb03e64d025\",\n        \"directoryCode\": \"04dc060b-aa94-43e3-bdf6-57f3a201edd0\"\n    }\n]"
								}
							]
						},
						{
							"name": "SUCCESS apiHost/{{companyCode}}/directory/{{directoryCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"file updated successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory was updated\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.name).to.be.a(\"string\");  ",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.above(0);",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomFirstName}}');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFullName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory/{{varTestDirectoryCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory",
										"{{varTestDirectoryCd}}"
									]
								},
								"description": "## Descripción\nEsta API actualiza un directorio relacionado con una compañía en la base de datos.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API.\n\n## Requisitos de la URI\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Requisitos en Body\nPara actualizar un directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| name (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_AWS_03\nEsta respuesta significa que no hay ningún segmento para esa empresa.\n\n### - EMAKER_DIRECTORY_02\nEsta respuesta significa que el directorio ya existe en la empresa, por lo tanto no se actualizó el campo name del directorio.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se actualizará el name del directorio para la compañía que se está pasando en la URI. EL mensaje que se obtendrá será \"message\": \"\"Directory was updated\"\nPuedes verificar la actualización name del registro ejecutando el método GET de la API Directory."
							},
							"response": [
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:18.5301414\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:42 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:42.6916892\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Carpeta 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:19:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was updated\"\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:21:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:21:18.8135251\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								}
							]
						},
						{
							"name": "1-ERROR apiHost/{{companyCode}}/directory/{{directoryCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Cuando el directoryCode es erróneo, osea, no existe",
											"",
											"pm.test(\"Successful DELETE request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"Response in an object, not an array\", function () { ",
											"var jsonData1 = pm.response.json();",
											"pm.expect(jsonData1).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"Directory registered\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory code is not associated to the company.\");",
											"});",
											"",
											"//El name tiene algo escrito",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"directoryTest 100\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory/{{varDirectoryNotExist}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory",
										"{{varDirectoryNotExist}}"
									]
								},
								"description": "## Descripción\nEsta API actualiza un directorio relacionado con una compañía en la base de datos.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API.\n\n## Requisitos de la URI\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Requisitos en Body\nPara actualizar un directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| name (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_AWS_03\nEsta respuesta significa que no hay ningún segmento para esa empresa.\n\n### - EMAKER_DIRECTORY_02\nEsta respuesta significa que el directorio ya existe en la empresa, por lo tanto no se actualizó el campo name del directorio.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se actualizará el name del directorio para la compañía que se está pasando en la URI. EL mensaje que se obtendrá será \"message\": \"\"Directory was updated\"\nPuedes verificar la actualización name del registro ejecutando el método GET de la API Directory."
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Carpeta 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:19:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was updated\"\n}"
								},
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:42 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:42.6916892\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:21:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:21:18.8135251\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:18.5301414\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "2-ERROR apiHost/{{companyCode}}/directory/{{directoryCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Error porque el companyCode no existe",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error in companyCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory code is not associated to the company.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"directoryTest 08\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/directory/{{varTestDirectoryCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"directory",
										"{{varTestDirectoryCd}}"
									]
								},
								"description": "## Descripción\nEsta API actualiza un directorio relacionado con una compañía en la base de datos.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API.\n\n## Requisitos de la URI\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Requisitos en Body\nPara actualizar un directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| name (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_AWS_03\nEsta respuesta significa que no hay ningún segmento para esa empresa.\n\n### - EMAKER_DIRECTORY_02\nEsta respuesta significa que el directorio ya existe en la empresa, por lo tanto no se actualizó el campo name del directorio.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se actualizará el name del directorio para la compañía que se está pasando en la URI. EL mensaje que se obtendrá será \"message\": \"\"Directory was updated\"\nPuedes verificar la actualización name del registro ejecutando el método GET de la API Directory."
							},
							"response": [
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:42 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:42.6916892\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Carpeta 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:19:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was updated\"\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:21:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:21:18.8135251\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:18.5301414\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "3-ERROR apiHost/{{companyCode}}/directory/{{directoryCode}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//Cuando en el BODY el valor de \"NAME\" a actualizar está vacío",
											"pm.test(\"Validation failed directoryCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.name.length).to.be.eql(0);",
											"});",
											"",
											"//Los companyCode y directoryCode están escritos correctamente, osea, existen"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory/{{varTestDirectoryCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory",
										"{{varTestDirectoryCd}}"
									]
								},
								"description": "## Descripción\nEsta API actualiza un directorio relacionado con una compañía en la base de datos.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API.\n\n## Requisitos de la URI\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Requisitos en Body\nPara actualizar un directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| name (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_AWS_03\nEsta respuesta significa que no hay ningún segmento para esa empresa.\n\n### - EMAKER_DIRECTORY_02\nEsta respuesta significa que el directorio ya existe en la empresa, por lo tanto no se actualizó el campo name del directorio.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se actualizará el name del directorio para la compañía que se está pasando en la URI. EL mensaje que se obtendrá será \"message\": \"\"Directory was updated\"\nPuedes verificar la actualización name del registro ejecutando el método GET de la API Directory."
							},
							"response": [
								{
									"name": "Name Validation Not Null",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:42 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:42.6916892\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Name Validation Not Empty",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:20:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:20:18.5301414\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"name: name value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Directory Validation Repeated In Company",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"directory 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:21:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:21:18.8135251\",\n    \"message\": \"Directory is already registered\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_DIRECTORY_02\",\n    \"details\": null\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Carpeta 1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:19:01 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was updated\"\n}"
								}
							]
						},
						{
							"name": "SUCCESS apiHost/{{companyCode}}/directory/{{directoryCode}}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"file deleted successfully\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory was removed\");",
											"});",
											"",
											"pm.test(\"comprobation directory\",function(){",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.a(\"string\");  ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory/{{varTestDirectoryCd}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory",
										"{{varTestDirectoryCd}}"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\"."
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:44:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was removed\"\n}"
								},
								{
									"name": "Directory Validation Exists In Company",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/05dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"05dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:28:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:28:27.1146778\",\n    \"message\": \"Directory does not exists in the company\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/05dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_DIRECTORY_03\",\n    \"details\": null\n}"
								}
							]
						},
						{
							"name": "1-ERROR apiHost/{{companyCode}}/directory/{{directoryCode}}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", () => {",
											"  pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});",
											"",
											"pm.test(\"Response in an object, not an array\", function () { ",
											"var jsonData1 = pm.response.json();",
											"pm.expect(jsonData1).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"Directory does not exists in the company\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory code is not associated to the company.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/directory/{{varDirectoryNotExist}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"directory",
										"{{varDirectoryNotExist}}"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\"."
							},
							"response": [
								{
									"name": "Directory Validation Exists In Company",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/05dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"05dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:28:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:28:27.1146778\",\n    \"message\": \"Directory does not exists in the company\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/05dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_DIRECTORY_03\",\n    \"details\": null\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:44:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was removed\"\n}"
								}
							]
						},
						{
							"name": "2-ERROR apiHost/{{companyCode}}/directory/{{directoryCode}}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"//Cuando el companyCode y directoryCode están ambos erróneos, no existen",
											"pm.test(\"Error companyCode\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Directory code is not associated to the company.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/directory/{{varDirectoryNotExist}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"directory",
										"{{varDirectoryNotExist}}"
									]
								},
								"description": "## Descripción\r\nEsta API elimina un directorio relacionado con un código de compañía de la base de datos.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode y directoryCode se pasan en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y crear un directorio necesitamos la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n| directoryCode (Not null) | String |\r\n\r\nEsta información se puede obtener con el método GET del API Directory.\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_AWS_03\r\nEsta respuesta significa que no hay ningún segmento para esa empresa.\r\n\r\n### - EMAKER_DIRECTORY_03\r\nEsta respuesta significa que no hay un directorio en la empresa o que el registro que se pretende borrar ya no existe.\r\n\r\n## Respuesta del método\r\nSi se ha eliminado el registro de forma correcta y el mensaje que se obtendrá será \"message\": \"Directory was removed\"."
							},
							"response": [
								{
									"name": "Directory Validation Exists In Company",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/05dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"05dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:28:27 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-02-08T05:28:27.1146778\",\n    \"message\": \"Directory does not exists in the company\",\n    \"path\": \"uri=/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/05dc060b-aa94-43e3-bdf6-57f3a201edd0\",\n    \"apiCode\": \"EMAKER_DIRECTORY_03\",\n    \"details\": null\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory/04dc060b-aa94-43e3-bdf6-57f3a201edd0",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory",
												"04dc060b-aa94-43e3-bdf6-57f3a201edd0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:44:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Directory was removed\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "file",
					"item": [
						{
							"name": "apiHost/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonObject = xml2Json(responseBody);",
											"let fileTmp= jsonObject.ListBucketResult.Contents[0].Key",
											"postman.setEnvironmentVariable(\"NameFileTmp\",fileTmp);",
											"",
											"postman.setEnvironmentVariable(\"varFileTmp\",\"s3://emaker-tmp/\"+fileTmp);",
											"",
											"console.log(fileTmp);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//https://s3.amazonaws.com/emaker-tmp/S"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "secretKey",
											"value": "/80weiHvvAOnejagBfxBhfZsVxJ6RMlVJ5whxWGI",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "region",
											"value": "us-east-1",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										},
										{
											"key": "addAuthDataToQuery",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "accessKey",
											"value": "AKIATI3WHEIVW5UJI3LQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://emaker-tmp.s3.amazonaws.com/",
									"protocol": "https",
									"host": [
										"emaker-tmp",
										"s3",
										"amazonaws",
										"com"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "1-ERROR apiHost/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 if name service is incorrect\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "secretKey",
											"value": "/80weiHvvAOnejagBfxBhfZsVxJ6RMlVJ5whxWGI",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "AKIATI3WHEIVW5UJI3LQ",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s2",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "region",
											"value": "us-east-1",
											"type": "string"
										},
										{
											"key": "addAuthDataToQuery",
											"value": true,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://emaker-tmp.s3.amazonaws.com/",
									"protocol": "https",
									"host": [
										"emaker-tmp",
										"s3",
										"amazonaws",
										"com"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "2-ERROR apiHost/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 403 if AccessKey o SecretKey is incorrecty\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "//80weiHvvAOnejagBfxBhfZsVxJ#########",
											"type": "string"
										},
										{
											"key": "accessKey",
											"value": "AKIATI3WHEIVW#####",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "region",
											"value": "us-east-1",
											"type": "string"
										},
										{
											"key": "addAuthDataToQuery",
											"value": true,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://emaker-tmp.s3.amazonaws.com/",
									"protocol": "https",
									"host": [
										"emaker-tmp",
										"s3",
										"amazonaws",
										"com"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "3-ERROR apiHost/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 if AWS Region is incorrect\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"auth": {
									"type": "awsv4",
									"awsv4": [
										{
											"key": "region",
											"value": "us-east-2",
											"type": "string"
										},
										{
											"key": "secretKey",
											"value": "/80weiHvvAOnejagBfxBhfZsVxJ6RMlVJ5whxWGI",
											"type": "string"
										},
										{
											"key": "sessionToken",
											"value": "",
											"type": "string"
										},
										{
											"key": "service",
											"value": "s3",
											"type": "string"
										},
										{
											"key": "addAuthDataToQuery",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "accessKey",
											"value": "AKIATI3WHEIVW5UJI3LQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://emaker-tmp.s3.amazonaws.com/",
									"protocol": "https",
									"host": [
										"emaker-tmp",
										"s3",
										"amazonaws",
										"com"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "ACCESS apiHost/{{companyCode}}/file/upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test comprobation de POST\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"The uploading file was done successfully.\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has a directoryCode of 36 digits\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.directoryCode.length).to.be.equal(36);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": \"{{varFileTmp}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/file/upload",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"file",
										"upload"
									]
								},
								"description": "## Descripción\nEsta API ubica y envía un archivo desde el bucket de S3 tmp al bucket de S3 de su respectivo directorio asociado a su respectiva compañía. AL final, crea un registro de dónde dice en qué lugar está el bucket. Cada compañía tiene su bucket.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\n\n## Requisitos de la URI\nPara enviar la URI necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n\n## Requisitos en Body\nPara crear una directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| file (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_FILE_01\nEsta respuesta significa que el archivo no se puede encontrar en el depósito tmp de S3.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se ubicará el archivo que está en el Bucket temporal y se moverá al Bucket de la compañía (cada compañía tiene su Bucket) asociándose así a la compañía. EL mensaje que se obtendrá será \"message\": \"File was created\""
							},
							"response": [
								{
									"name": "FIeld file Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": null,\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:43.910442\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld directoryCode Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:23.313943\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "DIrectory does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"incorrect\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:18:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:18:12.689839\",\n    \"message\": \"Directory does not exists\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_DIRECTORY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "FIeld directoryCode Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:05 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:05.996257\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:16:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T18:16:47.828+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\"\n}"
								},
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/companyCodeIncorrect/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"companyCodeIncorrect",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:17:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:17:43.665679\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/companyCodeIncorrect/file/upload\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Field file Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:21 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:21.50945\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Tue, 29 Dec 2020 17:21:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "17"
										},
										{
											"key": "Sozu-Id",
											"value": "de5c3445-4a63-46e3-adcb-f1e542e211d3"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The uploading file was done successfully.\"\n}"
								}
							]
						},
						{
							"name": "1-ERROR apiHost/{{companyCode}}/file/upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//2) En la URI el companyCode es erróneo",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that message incorrect\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Company does not exists\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": \"{{varFileTmp}}\",\r\n    \"directoryCode\": \"{{FirstDirectoryCd}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/file/upload",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"file",
										"upload"
									]
								},
								"description": "## Descripción\nEsta API ubica y envía un archivo desde el bucket de S3 tmp al bucket de S3 de su respectivo directorio asociado a su respectiva compañía. AL final, crea un registro de dónde dice en qué lugar está el bucket. Cada compañía tiene su bucket.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\n\n## Requisitos de la URI\nPara enviar la URI necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n\n## Requisitos en Body\nPara crear una directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| file (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_FILE_01\nEsta respuesta significa que el archivo no se puede encontrar en el depósito tmp de S3.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se ubicará el archivo que está en el Bucket temporal y se moverá al Bucket de la compañía (cada compañía tiene su Bucket) asociándose así a la compañía. EL mensaje que se obtendrá será \"message\": \"File was created\""
							},
							"response": [
								{
									"name": "FIeld directoryCode Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:05 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:05.996257\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "DIrectory does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"incorrect\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:18:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:18:12.689839\",\n    \"message\": \"Directory does not exists\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_DIRECTORY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:16:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T18:16:47.828+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\"\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Tue, 29 Dec 2020 17:21:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "17"
										},
										{
											"key": "Sozu-Id",
											"value": "de5c3445-4a63-46e3-adcb-f1e542e211d3"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The uploading file was done successfully.\"\n}"
								},
								{
									"name": "Field file Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:21 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:21.50945\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/companyCodeIncorrect/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"companyCodeIncorrect",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:17:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:17:43.665679\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/companyCodeIncorrect/file/upload\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "FIeld directoryCode Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:23.313943\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld file Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": null,\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:43.910442\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is null and API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "2-ERROR apiHost/{{companyCode}}/file/upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Se requiere crear un file pero el Name de FILE y directoryCode está vacío",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"message error file registered\", function () {",
											"var jsonData = pm.response.json();",
											"pm.expect(jsonData.message).to.eql(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has one element\", function () {",
											"let requestBody = JSON.parse(pm.request.body.raw);",
											"pm.expect(requestBody.file.length).to.be.eql(0);",
											"pm.expect(requestBody.directoryCode.length).to.be.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": \"\",\r\n    \"directoryCode\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/file/upload",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"file",
										"upload"
									]
								},
								"description": "## Descripción\nEsta API ubica y envía un archivo desde el bucket de S3 tmp al bucket de S3 de su respectivo directorio asociado a su respectiva compañía. AL final, crea un registro de dónde dice en qué lugar está el bucket. Cada compañía tiene su bucket.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\n\n## Requisitos de la URI\nPara enviar la URI necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n\n## Requisitos en Body\nPara crear una directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| file (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_FILE_01\nEsta respuesta significa que el archivo no se puede encontrar en el depósito tmp de S3.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se ubicará el archivo que está en el Bucket temporal y se moverá al Bucket de la compañía (cada compañía tiene su Bucket) asociándose así a la compañía. EL mensaje que se obtendrá será \"message\": \"File was created\""
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:16:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T18:16:47.828+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\"\n}"
								},
								{
									"name": "Field file Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:21 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:21.50945\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld directoryCode Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:23.313943\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld file Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": null,\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:43.910442\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "DIrectory does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"incorrect\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:18:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:18:12.689839\",\n    \"message\": \"Directory does not exists\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_DIRECTORY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Tue, 29 Dec 2020 17:21:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "17"
										},
										{
											"key": "Sozu-Id",
											"value": "de5c3445-4a63-46e3-adcb-f1e542e211d3"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The uploading file was done successfully.\"\n}"
								},
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/companyCodeIncorrect/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"companyCodeIncorrect",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:17:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:17:43.665679\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/companyCodeIncorrect/file/upload\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "FIeld directoryCode Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:05 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:05.996257\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is empty and the API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "3-ERROR apiHost/{{companyCode}}/file/upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Cuando en el bucket no se encuentra ese archivo o no existe",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that evalue content bucket not exists\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"ContentDirectory does not exists\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file123HOLAAS.txt\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/file/upload",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"file",
										"upload"
									]
								},
								"description": "## Descripción\nEsta API ubica y envía un archivo desde el bucket de S3 tmp al bucket de S3 de su respectivo directorio asociado a su respectiva compañía. AL final, crea un registro de dónde dice en qué lugar está el bucket. Cada compañía tiene su bucket.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\n\n## Requisitos de la URI\nPara enviar la URI necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n\n## Requisitos en Body\nPara crear una directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| file (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_FILE_01\nEsta respuesta significa que el archivo no se puede encontrar en el depósito tmp de S3.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se ubicará el archivo que está en el Bucket temporal y se moverá al Bucket de la compañía (cada compañía tiene su Bucket) asociándose así a la compañía. EL mensaje que se obtendrá será \"message\": \"File was created\""
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:16:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T18:16:47.828+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\"\n}"
								},
								{
									"name": "FIeld file Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": null,\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:43.910442\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "DIrectory does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"incorrect\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:18:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:18:12.689839\",\n    \"message\": \"Directory does not exists\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_DIRECTORY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Tue, 29 Dec 2020 17:21:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "17"
										},
										{
											"key": "Sozu-Id",
											"value": "de5c3445-4a63-46e3-adcb-f1e542e211d3"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The uploading file was done successfully.\"\n}"
								},
								{
									"name": "FIeld directoryCode Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:05 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:05.996257\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "FIeld directoryCode Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:23.313943\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/companyCodeIncorrect/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"companyCodeIncorrect",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:17:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:17:43.665679\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/companyCodeIncorrect/file/upload\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Field file Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:21 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:21.50945\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is empty and the API cannot be processed\"\n    ]\n}"
								}
							]
						},
						{
							"name": "4-ERROR apiHost/{{companyCode}}/file/upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Al enviar el directoryCode es incorrecto",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that evalue directoryCode not exists\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Directory code is not associated to the company.\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": \"{{varFileTmp}}\",\r\n    \"directoryCode\": \"{{varDirectoryNotExist}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/file/upload",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"file",
										"upload"
									]
								},
								"description": "## Descripción\nEsta API ubica y envía un archivo desde el bucket de S3 tmp al bucket de S3 de su respectivo directorio asociado a su respectiva compañía. AL final, crea un registro de dónde dice en qué lugar está el bucket. Cada compañía tiene su bucket.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\n\n## Requisitos de la URI\nPara enviar la URI necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| companyCode (Not null) | String |\n\n## Requisitos en Body\nPara crear una directorio necesitamos enviar la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| file (Not null) | String |\n| directoryCode (Not null) | String |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode en la base de datos no se obtuvo porque no existe.\n\n### - EMAKER_FILE_01\nEsta respuesta significa que el archivo no se puede encontrar en el depósito tmp de S3.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se ubicará el archivo que está en el Bucket temporal y se moverá al Bucket de la compañía (cada compañía tiene su Bucket) asociándose así a la compañía. EL mensaje que se obtendrá será \"message\": \"File was created\""
							},
							"response": [
								{
									"name": "FIeld directoryCode Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:23 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:23.313943\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Company does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/companyCodeIncorrect/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"companyCodeIncorrect",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:17:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:17:43.665679\",\n    \"message\": \"Company does not exists\",\n    \"path\": \"uri=/v1/emaker/companyCodeIncorrect/file/upload\",\n    \"apiCode\": \"EMAKER_COMPANY_01\",\n    \"details\": null\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:16:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T18:16:47.828+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"message\": \"\",\n    \"path\": \"/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\"\n}"
								},
								{
									"name": "FIeld file Null",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": null,\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:43 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:43.910442\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is null and API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Tue, 29 Dec 2020 17:21:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "17"
										},
										{
											"key": "Sozu-Id",
											"value": "de5c3445-4a63-46e3-adcb-f1e542e211d3"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The uploading file was done successfully.\"\n}"
								},
								{
									"name": "FIeld directoryCode Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:20:05 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:20:05.996257\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"directoryCode: directoryCode value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "Field file Empty",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"\",\r\n    \"directoryCode\": \"117b328e-b88d-4d52-85fb-e70459d23ccc\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:19:21 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:19:21.50945\",\n    \"message\": \"Validation failed\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_01\",\n    \"details\": [\n        \"file: file value is empty and the API cannot be processed\"\n    ]\n}"
								},
								{
									"name": "DIrectory does not exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"file\": \"s3://emaker-tmp/file6.txt\",\r\n    \"directoryCode\": \"incorrect\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:8080/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0",
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 12 Mar 2021 18:18:12 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2021-03-12T13:18:12.689839\",\n    \"message\": \"Directory does not exists\",\n    \"path\": \"uri=/v1/emaker/87bbe5cc-53f0-4e4e-be41-ba861b8d0fd0/file/upload\",\n    \"apiCode\": \"EMAKER_DIRECTORY_01\",\n    \"details\": null\n}"
								}
							]
						},
						{
							"name": "ACCESS apiHost/{{companyCode}}/file?{FILTER}={VALUE}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test comprobation that estructure\", function () {",
											"    let jsonData = pm.response.json();",
											"    //pm.expect(jsonData[0].name).to.be.eql(NameFileTmp);",
											"    //pm.expect(jsonData[0].location).to.be.eql(varFileTmp);",
											"});",
											"",
											"pm.test(\"Test comprobation that array void\", function () {",
											"    let jsonData = pm.response.json();",
											"    //pm.expect(jsonData.length).to.be.eql(1);",
											"    pm.expect(jsonData.length).to.be.not.eql(0);",
											"    pm.expect(jsonData).to.be.an(\"array\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/file?name={{NameFileTmp}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"file"
									],
									"query": [
										{
											"key": "name",
											"value": "{{NameFileTmp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ERROR apiHost/{{companyCode}}/file?{FILTER}={VALUE}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test comprobation de GET\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Company does not exists\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/file?name={{NameFileTmp}}",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"file"
									],
									"query": [
										{
											"key": "name",
											"value": "{{NameFileTmp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ACCESS apiHost/{{companyCode}}/{{directoryCode}}/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Crear un método para traer los archivos de un directoryCode debajo del CompanyCode.",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response in an array\", function () { ",
											"var jsonData1 = pm.response.json();",
											"pm.expect(jsonData1).to.be.an(\"array\");",
											"});",
											"",
											"pm.test(\"Test that the array has even one more digit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"});",
											"",
											"// Prueba que cada atributo del objeto exista - Response Body string",
											"pm.test(\"Test that each attribute of the object exists\",() => {",
											"  pm.expect(pm.response.text()).to.include(\"id\");",
											"  pm.expect(pm.response.text()).to.include(\"createDate\");",
											"  pm.expect(pm.response.text()).to.include(\"updateDate\");",
											"  pm.expect(pm.response.text()).to.include(\"name\");",
											"  pm.expect(pm.response.text()).to.include(\"location\");",
											"  pm.expect(pm.response.text()).to.include(\"description\");",
											"  pm.expect(pm.response.text()).to.include(\"directoryCode\");",
											"  pm.expect(pm.response.text()).to.include(\"contentDirCode\");",
											"  pm.expect(pm.response.text()).to.include(\"remoteExist\");",
											"",
											"});",
											"",
											"//{{apiHost}}/{{varCompanyCode}}/0b8ab1bf-4f79-4427-b976-23246b6b3c66/file"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/{{varDirectoryCd}}/file",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"{{varDirectoryCd}}",
										"file"
									]
								},
								"description": "## Descripción\r\nEsta API retorna la información del directorio en función del código de la compañia a la que pertenecen.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y obtener los directorios necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtenemos todos los directorios que pertenecen al companyCod de la cuál están consultando. La estructura de la información es la siguiente:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| name (Not null) | string |\r\n| companyCode (Not null) | string |\r\n| directoryCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:10:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"directory 1\",\n        \"createDate\": \"2021-02-08T11:04:19.626+00:00\",\n        \"updateDate\": \"2021-02-08T11:04:19.627+00:00\",\n        \"companyCode\": \"e7f64862-0efb-4809-93f6-ddb03e64d025\",\n        \"directoryCode\": \"04dc060b-aa94-43e3-bdf6-57f3a201edd0\"\n    }\n]"
								}
							]
						},
						{
							"name": "ERROR apiHost/{{companyCode}}/{{directoryCode}}/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Crear un método para traer los archivos de un directoryCode debajo del CompanyCode.",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test comprobation de GET\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Company does not exists\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/{{varDirectoryCd}}/file",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"{{varDirectoryCd}}",
										"file"
									]
								},
								"description": "## Descripción\r\nEsta API retorna la información del directorio en función del código de la compañia a la que pertenecen.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y obtener los directorios necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtenemos todos los directorios que pertenecen al companyCod de la cuál están consultando. La estructura de la información es la siguiente:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| name (Not null) | string |\r\n| companyCode (Not null) | string |\r\n| directoryCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:10:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"directory 1\",\n        \"createDate\": \"2021-02-08T11:04:19.626+00:00\",\n        \"updateDate\": \"2021-02-08T11:04:19.627+00:00\",\n        \"companyCode\": \"e7f64862-0efb-4809-93f6-ddb03e64d025\",\n        \"directoryCode\": \"04dc060b-aa94-43e3-bdf6-57f3a201edd0\"\n    }\n]"
								}
							]
						},
						{
							"name": "ACCESS apiHost/{{companyCode}}/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Crear un método para tarer los archivos de un companycode",
											"//3.128.165.127/emaker/api/{{companyCode}}/file",
											"",
											"/*",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response in an array\", function () { ",
											"var jsonData1 = pm.response.json();",
											"pm.expect(jsonData1).to.be.an(\"array\");",
											"});",
											"",
											"pm.test(\"Test that the array has even one more digit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"});",
											"",
											"// Prueba que cada atributo del objeto exista - Response Body string",
											"pm.test(\"Test that each attribute of the object exists\",() => {",
											"  pm.expect(pm.response.text()).to.include(\"id\");",
											"  pm.expect(pm.response.text()).to.include(\"createDate\");",
											"  pm.expect(pm.response.text()).to.include(\"updateDate\");",
											"  pm.expect(pm.response.text()).to.include(\"name\");",
											"  pm.expect(pm.response.text()).to.include(\"companyCode\");",
											"  pm.expect(pm.response.text()).to.include(\"directoryCode\");",
											"});",
											"",
											"let varcodigodirect = pm.variables.get(\"varDirectoryCd\");",
											"tests[\"directoryCode exists\"] = responseBody.has(varcodigodirect);",
											"",
											"let varcodigodirectFirst = pm.variables.get(\"varTestDirectoryCd\");",
											"tests[\"First directoryCode exists\"] = responseBody.has(varcodigodirectFirst);",
											"",
											"",
											"//{{apiHost}}/{{varCompanyCode}}/0b8ab1bf-4f79-4427-b976-23246b6b3c66/file",
											"*/",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyCode}}/file",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyCode}}",
										"file"
									]
								},
								"description": "## Descripción\r\nEsta API retorna la información del directorio en función del código de la compañia a la que pertenecen.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y obtener los directorios necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtenemos todos los directorios que pertenecen al companyCod de la cuál están consultando. La estructura de la información es la siguiente:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| name (Not null) | string |\r\n| companyCode (Not null) | string |\r\n| directoryCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:10:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"directory 1\",\n        \"createDate\": \"2021-02-08T11:04:19.626+00:00\",\n        \"updateDate\": \"2021-02-08T11:04:19.627+00:00\",\n        \"companyCode\": \"e7f64862-0efb-4809-93f6-ddb03e64d025\",\n        \"directoryCode\": \"04dc060b-aa94-43e3-bdf6-57f3a201edd0\"\n    }\n]"
								}
							]
						},
						{
							"name": "ERROR  apiHost/{companyCode}}/file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Crear un método para tarer los archivos de un companycode",
											"//3.128.165.127/emaker/api/{{companyCode}}/file",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test comprobation de GET\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Company does not exists\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/{{varCompanyNotExist}}/file",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"{{varCompanyNotExist}}",
										"file"
									]
								},
								"description": "## Descripción\r\nEsta API retorna la información del directorio en función del código de la compañia a la que pertenecen.\r\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\r\ncompanyCode se pasa en el URI de acuerdo con la referencia del nombre de la API\r\n\r\n## Requisito de la URI\r\nPara enviar la URI y obtener los directorios necesitamos ingresar en la URI la siguiente información:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| companyCode (Not null) | String |\r\n\r\n## Código de error:\r\n\r\n### - NO AUTORIZADO\r\nEsta respuesta significa que no se obtuvo ninguna autorización de token para interactuar con la API.\r\n\r\n### - EMAKER_COMPANY_01\r\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o no existe.\r\n\r\n## Respuesta del método\r\nAl consultar información a través del método GET obtenemos todos los directorios que pertenecen al companyCod de la cuál están consultando. La estructura de la información es la siguiente:\r\n\r\n| CAMPO | TIPO DE CAMPO |\r\n| ------ | ------ |\r\n| id (Not null) | int |\r\n| createDate (Not null) | int |\r\n| updateDate (Not null) | int |\r\n| name (Not null) | string |\r\n| companyCode (Not null) | string |\r\n| directoryCode (Not Null) | string |"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:8080/v1/emaker/e7f64862-0efb-4809-93f6-ddb03e64d025/directory",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"emaker",
												"e7f64862-0efb-4809-93f6-ddb03e64d025",
												"directory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 08 Feb 2021 11:10:16 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"directory 1\",\n        \"createDate\": \"2021-02-08T11:04:19.626+00:00\",\n        \"updateDate\": \"2021-02-08T11:04:19.627+00:00\",\n        \"companyCode\": \"e7f64862-0efb-4809-93f6-ddb03e64d025\",\n        \"directoryCode\": \"04dc060b-aa94-43e3-bdf6-57f3a201edd0\"\n    }\n]"
								}
							]
						}
					]
				},
				{
					"name": "mailschedule",
					"item": [
						{
							"name": "G-ACCES apiHost/schedule",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Mail schedule was created\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.scheduleType).to.be.eqls(\"General\");",
											"    pm.expect(requestBody.sendTime.length).to.be.below(32);",
											"    pm.expect(requestBody.sendTime).to.be.not.eqls(null);",
											"    pm.expect(requestBody.subject).to.be.not.eqls(null);",
											"    pm.expect(requestBody.cc).to.be.an(\"array\");",
											"    pm.expect(requestBody.cc).to.be.not.eqls(null);",
											"    pm.expect(requestBody.content).to.be.a(\"String\");",
											"    pm.expect(requestBody.content).to.be.not.eqls(null);",
											"    pm.expect(requestBody.attachedFile).to.be.an(\"array\");",
											"    pm.expect(requestBody.attachedFile).to.be.not.eqls(null);",
											"    pm.expect(requestBody.variablesFile).to.be.not.eqls(null);",
											"    pm.expect(requestBody.variables).to.be.an(\"array\");",
											"    pm.expect(requestBody.variables).to.be.not.eqls(null);",
											"    pm.expect(requestBody.target).to.be.an(\"array\");",
											"    pm.expect(requestBody.target).to.be.not.eqls(null);",
											"    pm.expect(requestBody.createUser).to.be.not.eqls(null);",
											"    pm.expect(requestBody.companyCode.length).to.be.equal(36);",
											"    ",
											"});",
											"",
											"",
											"var jsonData2 = JSON.parse(responseBody);",
											"pm.environment.set(\"varIdMailcheduleG\",jsonData2.mailScheduleId);",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"General\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n    \"{{$randomEmail}}\",\r\n    \"test.test@test.com\",\r\n    \"test.test@test.com\"\r\n],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n\t\"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "P-ACCES apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Mail schedule was created\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.scheduleType).to.be.eqls(\"Personalizado\");",
											"    pm.expect(requestBody.sendTime.length).to.be.below(32);",
											"    pm.expect(requestBody.sendTime).to.be.not.eqls(null);",
											"    pm.expect(requestBody.subject).to.be.not.eqls(null);",
											"    pm.expect(requestBody.cc).to.be.an(\"array\");",
											"    pm.expect(requestBody.cc).to.be.not.eqls(null);",
											"    pm.expect(requestBody.content).to.be.a(\"String\");",
											"    pm.expect(requestBody.content).to.be.not.eqls(null);",
											"    pm.expect(requestBody.attachedFile).to.be.an(\"array\");",
											"    pm.expect(requestBody.attachedFile).to.be.not.eqls(null);",
											"    pm.expect(requestBody.variablesFile).to.be.not.eqls(null);",
											"    pm.expect(requestBody.variables).to.be.an(\"array\");",
											"    pm.expect(requestBody.variables).to.be.not.eqls(null);",
											"    pm.expect(requestBody.target).to.be.an(\"array\");",
											"    pm.expect(requestBody.target).to.be.not.eqls(null);",
											"    pm.expect(requestBody.createUser).to.be.not.eqls(null);",
											"   // pm.expect(requestBody.updateUser).to.be.not.eqls(null);",
											"    pm.expect(requestBody.directoryCode.length).to.be.equal(36);",
											"    pm.expect(requestBody.companyCode.length).to.be.equal(36);",
											"    ",
											"});",
											"",
											"",
											"var jsonData2 = JSON.parse(responseBody);",
											"pm.environment.set(\"varIdMailcheduleP\",jsonData2.mailScheduleId);",
											"",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "1P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 \", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    //pm.expect(requestBody.subject).to.be.not.eqls(null);",
											"    pm.expect(requestBody.subject.length).to.be.eqls(0);",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "2P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.cc).to.be.an(\"array\");",
											"    pm.expect(requestBody.cc).to.be.not.eqls(null);  ",
											"});",
											"",
											"pm.test(\"Test cc is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.cc.length).to.be.eql(1);",
											"    ",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "3P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.content).to.be.an(\"string\");",
											"});",
											"",
											"pm.test(\"Test content is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.content.length).to.be.eqls(0);",
											"    ",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "4P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 \", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.attachedFile).to.be.an(\"array\");",
											"    pm.expect(requestBody.attachedFile).to.be.not.eqls(null);  ",
											"});",
											"",
											"pm.test(\"Test attachedFile is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.attachedFile.length).to.be.eql(1);",
											"    ",
											"});",
											"",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "5P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 \", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.variables).to.be.an(\"array\");",
											"    pm.expect(requestBody.variables).to.be.not.eqls(null);  ",
											"});",
											"",
											"pm.test(\"Test variables is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.variables.length).to.be.eql(1);",
											"    ",
											"});",
											"",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "6P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400 \", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.target).to.be.an(\"array\");",
											"    pm.expect(requestBody.target).to.be.not.eqls(null);  ",
											"});",
											"",
											"pm.test(\"Test target is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.target.length).to.be.eql(1);",
											"    ",
											"});",
											"",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "7P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.createUser).to.be.an(\"string\");",
											"});",
											"",
											"pm.test(\"Test createUser is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.createUser.length).to.be.eqls(0);  ",
											"});",
											"",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "8P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.updateUser).to.be.an(\"string\");",
											"});",
											"",
											"pm.test(\"Test createUser is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.updateUser.length).to.be.eqls(0);  ",
											"});",
											"",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"\",\r\n    \"directoryCode\": \"{{varDirectoryCd}}\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "9P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Directory code is not associated to the company.\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.directoryCode).to.be.an(\"string\");",
											"});",
											"",
											"pm.test(\"Test directoryCode is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.directoryCode.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleType\": \"Personalizado\",\r\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\r\n    \"subject\": \"{{$randomBs}}\",\r\n    \"cc\": [\r\n        \"{{$randomEmail}}\",\r\n        \"{{$randomExampleEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"content\": \"{{$randomPhrase}}\",\r\n    \"attachedFile\": [\r\n        \"s3://files/tmp/schedule/file-1.txt\",\r\n        \"s3://files/tmp/schedule/file-2.txt\",\r\n        \"s3://files/tmp/schedule/file-1.txt\"\r\n    ],\r\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\r\n    \"variables\": [\r\n        \"variable1\",\r\n        \"variable2\",\r\n        \"variable3\",\r\n        \"variable4\"\r\n    ],\r\n    \"target\": [\r\n        \"{{$randomEmail}}\",\r\n        \"test.test@test.com\"\r\n    ],\r\n    \"createUser\": \"{{$randomFirstName}}\",\r\n    \"updateUser\": \"{{$randomLastName}}\",\r\n    \"directoryCode\": \"\",\r\n    \"companyCode\": \"{{varCompanyCode}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "10P-ERROR apiHost/schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Value message\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"Validation failed\");",
											"});",
											"",
											"pm.test(\"Test that the body raw has correct structure\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.companyCode).to.be.an(\"string\");",
											"});",
											"",
											"pm.test(\"Test companyCode is void\",function(){",
											"    let requestBody = JSON.parse(pm.request.body.raw);",
											"    pm.expect(requestBody.companyCode.length).to.be.eqls(0);  ",
											"});",
											"",
											"pm.variables.replaceIn('{{$randomBs}}');",
											"pm.variables.replaceIn('{{$randomPhrase}}');",
											"pm.variables.replaceIn('{{$randomEmail}}');",
											"pm.variables.replaceIn('{{$randomExampleEmail}}');",
											"pm.variables.replaceIn('{{$randomFirstName}}');",
											"pm.variables.replaceIn('{{$randomLastName}}');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"resource\", \"company\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scheduleType\": \"Personalizado\",\n    \"sendTime\": \"2020-12-28T18:56:13.856+00:00\",\n    \"subject\": \"{{$randomBs}}\",\n    \"cc\": [\n        \"{{$randomEmail}}\",\n        \"{{$randomExampleEmail}}\",\n        \"test.test@test.com\"\n    ],\n    \"content\": \"{{$randomPhrase}}\",\n    \"attachedFile\": [\n        \"s3://files/tmp/schedule/file-1.txt\",\n        \"s3://files/tmp/schedule/file-2.txt\",\n        \"s3://files/tmp/schedule/file-1.txt\"\n    ],\n    \"variablesFile\": \"s3://files/tmp/schedule/file-1.xls\",\n    \"variables\": [\n        \"variable1\",\n        \"variable2\",\n        \"variable3\",\n        \"variable4\"\n    ],\n    \"target\": [\n        \"{{$randomEmail}}\",\n        \"test.test@test.com\"\n    ],\n    \"createUser\": \"{{$randomFirstName}}\",\n    \"updateUser\": \"{{$randomLastName}}\",\n    \"directoryCode\": \"{{varDirectoryCd}}\",\n    \"companyCode\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								},
								"description": "## Descripción\nEsta API envía y crea un archivo con toda la información del horario del email a enviar.\nSe puede crear varios horarios para un mismo directorio.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Requisitos en Body\nPara crear el horario necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ----- | ----- |\n| scheduleType (Not Null) | String |\n| sendTime (Not Null) | TimeStamp |\n| subject (Not Null) | String |\n| cc (Null) | List<String> |\n| content (Not Null) | String |\n| attachedFile (Null) | List<String> |\n| variablesFile (Null) | String |\n| variables (Null) | List<String> |\n| target (Not Null) | List<String> |\n| createUser (Not null) | String |\n| updateUser (Not null) | String |\n| directoryCode (Null) | String |\n| companyCode(Not Null) | String |\n\n## Código de error:\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_01\nEsta respuesta significa que hubo un error en las validaciones de campo vacío o nulo.\n\n### - EMAKER_COMPANY_01\nEsta respuesta significa que al validar companyCode en la base de datos no se obtuvo o tal vez no existe.\n\n### - EMAKER_DIRECTORY_01\nEsta respuesta significa que al validar el directoryCode (se obtiene de GET Directory) en la base de datos no se obtuvo o tal vez no existe.\n\n## Respuesta del método\nDe ser correcta la ejecución del método, se creará un horario para esa compañía y directorio que se pasó en el Body. EL mensaje que se obtendrá será \"message\": \"Mail schedule was created\"."
							},
							"response": []
						},
						{
							"name": "apiHost/schedule/all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response in an array\", function () { ",
											"    var jsonData1 = pm.response.json();",
											"    pm.expect(jsonData1).to.be.an(\"array\");",
											"});",
											"",
											"pm.test(\"Test that the array has even one more digit\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.above(0);",
											"});",
											"",
											"// Prueba que cada atributo del objeto exista - Response Body string",
											"pm.test(\"Test that each attribute of the object exists\",() => {",
											"  pm.expect(pm.response.text()).to.include(\"id\");",
											"  pm.expect(pm.response.text()).to.include(\"createDate\");",
											"  pm.expect(pm.response.text()).to.include(\"updateDate\");",
											"  pm.expect(pm.response.text()).to.include(\"scheduleType\");",
											"  pm.expect(pm.response.text()).to.include(\"sendTime\");",
											"  pm.expect(pm.response.text()).to.include(\"subject\");",
											"  pm.expect(pm.response.text()).to.include(\"cc\");",
											"  pm.expect(pm.response.text()).to.include(\"content\");",
											"  pm.expect(pm.response.text()).to.include(\"attachedFile\");",
											"  pm.expect(pm.response.text()).to.include(\"variablesFile\");",
											"  pm.expect(pm.response.text()).to.include(\"variables\");",
											"  pm.expect(pm.response.text()).to.include(\"target\");",
											"  pm.expect(pm.response.text()).to.include(\"createUser\");",
											"  pm.expect(pm.response.text()).to.include(\"updateUser\");",
											"  pm.expect(pm.response.text()).to.include(\"directoryCode\");",
											"  pm.expect(pm.response.text()).to.include(\"companyCode\");",
											"});",
											"",
											"pm.test(\"Test that find id in Array mailscheduleG\",() => {",
											"    let jsonData = JSON.parse(responseBody);",
											"    let varIdArray = pm.variables.get(\"varIdMailcheduleG\")",
											"    let existe = 0;",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        if (jsonData[i].id == varIdArray){",
											"            existe = 1;",
											"            break;",
											"        }",
											"    }",
											"    if (existe == 0){",
											"        console.info(\"erroneo----.\");",
											"        pm.expect(jsonData.id).to.be.equal(\"null\");",
											"    }",
											"});",
											"",
											"pm.test(\"Test that find id in Array mailscheduleP\",() => {",
											"    let jsonData = JSON.parse(responseBody);",
											"    let varIdArray = pm.variables.get(\"varIdMailcheduleP\")",
											"    let existe = 0;",
											"    for (i = 0; i < jsonData.length; i++) {",
											"        if (jsonData[i].id == varIdArray){",
											"            existe = 1;",
											"            break;",
											"        }",
											"    }",
											"    if (existe == 0){",
											"        console.info(\"erroneo----.\");",
											"        pm.expect(jsonData.id).to.be.equal(\"null\");",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiHost}}/schedule",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "ACCESS apiHost/user/me",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test that each attribute of the object is correct\",() => {",
											"  let jsonData = pm.response.json();",
											"  pm.expect(jsonData.id).to.be.an(\"number\");",
											"  pm.expect(jsonData.createDate).to.be.an(\"number\");",
											"  pm.expect(jsonData.updateDate).to.be.an(\"number\");",
											"  pm.expect(jsonData.fullName).to.be.an(\"string\");",
											"  pm.expect(jsonData.email).to.be.an(\"string\");",
											"  pm.expect(jsonData.login).to.be.an(\"string\");",
											"  pm.expect(jsonData.password).to.be.an(\"string\");",
											"  pm.expect(jsonData.role).to.be.an(\"string\");",
											"  pm.expect(jsonData.userCode).to.be.an(\"string\");",
											"  pm.expect(jsonData.companyCode).to.be.an(\"string\");",
											"});",
											"",
											"pm.test(\"Test that elements has even one more digit and is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.be.above(0);",
											"    pm.expect(jsonData.createDate).to.be.above(0);",
											"    pm.expect(jsonData.updateDate).to.be.above(0);",
											"    pm.expect(jsonData.fullName.length).to.be.above(0);",
											"    pm.expect(jsonData.email.length).to.be.above(7);",
											"    pm.expect(jsonData.login.length).to.be.above(0);",
											"    pm.expect(jsonData.fullName.length).to.be.above(0);",
											"    pm.expect(jsonData.password.length).to.be.above(3);",
											"    pm.expect(jsonData.role.length).to.be.above(0);",
											"    pm.expect(jsonData.userCode.length).to.be.above(0);",
											"    pm.expect(jsonData.companyCode.length).to.be.eqls(36);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/user/me",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"user",
										"me"
									]
								},
								"description": "## Descripción\nEsta API devuelve información de userAccount que en ese momento está en la sesión, basada en el token.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_JWT_TOKEN_01\nEsta respuesta significa que al validar el token hubo un error.\n\n## Respuesta del método\nDe ser correcta la ejecución del método GET obtenemos infromación sobre el usuario que en ese momento está en sesión. La estructura de la información es la siguiente:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| id (Not null) | int |\n| createDate (Not null) | int |\n| updateDate (Not null) | int |\n| fullName (Not null) | string |\n| email(Not null) | string |\n| login (Not null) | string |\n| password (Not null) | string |\n| role (Not null) | string |\n| userCode (Not null) | string |\n| companyCode (Not Null) | string |"
							},
							"response": []
						},
						{
							"name": "ERROR apiHost/user/me",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Test that ME of URI is incorrect\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.be.eq(\"The user code doesn't exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/user/123456780",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"user",
										"123456780"
									]
								},
								"description": "## Descripción\nEsta API devuelve información de userAccount que en ese momento está en la sesión, basada en el token.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_JWT_TOKEN_01\nEsta respuesta significa que al validar el token hubo un error.\n\n## Respuesta del método\nDe ser correcta la ejecución del método GET obtenemos infromación sobre el usuario que en ese momento está en sesión. La estructura de la información es la siguiente:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| id (Not null) | int |\n| createDate (Not null) | int |\n| updateDate (Not null) | int |\n| fullName (Not null) | string |\n| email(Not null) | string |\n| login (Not null) | string |\n| password (Not null) | string |\n| role (Not null) | string |\n| userCode (Not null) | string |\n| companyCode (Not Null) | string |"
							},
							"response": []
						}
					]
				},
				{
					"name": "scheduleevents",
					"item": [
						{
							"name": "apiHost/schedule/events/{{scheduleId}}",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiHost}}/schedule/events/588",
									"host": [
										"{{apiHost}}"
									],
									"path": [
										"schedule",
										"events",
										"588"
									]
								},
								"description": "## Descripción\nEsta API devuelve el evento de información de programación según el ScheduleId al que pertenecen. Guarda el historial de todos los cambios realizados, está ligado a un mailSchedulele.\nPara que la API funcione correctamente, necesita el token en Autorización -> Bearer Token\nscheduleId se pasa en el URI de acuerdo con la referencia del nombre de la API\n\n## Requisito de la URI\nPara enviar la URI, en la parte final debes colocar el schudeleId que empieza según programación de secuencia, se reinició desde el 500 hasta que se cree otro cambio y cambie la correlación.\n\nPara obtener los eventos en el horario de correo necesitamos la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| scheduleId (Not null) | int |\n\n## Código de error:\n\n### - NO AUTORIZADO\nEsta respuesta significa que no se obtuvo autorización de token para interactuar con la API.\n\n### - EMAKER_MAIL_SCHEDULE_01\nEsta respuesta significa que al validar scheduleId en la base de datos no se obtuvo, para eso revisar el schudeleId y así se solucionaría.\n\n## Respuesta del método\nAl consultar información a través del método GET obtengo la siguiente información:\n\n| CAMPO | TIPO DE CAMPO |\n| ------ | ------ |\n| eventTime (Not null) | int |\n| name (Not null) | string |\n| scheduleId (Not null) | int |\n| createDate (Not null) | int |\n| updateDate (Not null) | int |"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{localApiHost}}/schedule/events/2",
											"host": [
												"{{localApiHost}}"
											],
											"path": [
												"schedule",
												"events",
												"2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 29 Apr 2021 01:50:43 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"eventTime\": 1609181773856,\n        \"name\": \"CREATED\",\n        \"scheduleId\": 2,\n        \"createDate\": 1619659685739,\n        \"updateDate\": 1619659685739\n    }\n]"
								},
								{
									"name": "Mail Schedule does not exists",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{localApiHost}}/schedule/events/3",
											"host": [
												"{{localApiHost}}"
											],
											"path": [
												"schedule",
												"events",
												"3"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 29 Apr 2021 01:54:18 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": [\n        2021,\n        4,\n        28,\n        20,\n        54,\n        18,\n        12634000\n    ],\n    \"message\": \"MailSchedule does not exists\",\n    \"path\": \"uri=/v1/emaker/schedule/events/3\",\n    \"apiCode\": \"EMAKER_MAIL_SCHEDULE_01\",\n    \"details\": null\n}"
								}
							]
						}
					]
				}
			]
		}
	]
}